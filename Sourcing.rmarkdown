---
title: "Sources and Glossary"
author: "Matt Tabet"
---

```{r}
#| label: setup
#| include: false

# Improve digit display and NA display for kable tables
options(scipen = 1, knitr.kable.NA = "")

# Load necessary packages
library(tidyverse)
library(knitr)
library(kableExtra)
library(dplyr)
library(tidyverse)
library(knitr)
library(igraph)
library(tidygraph)
library(ggraph)
library(mdsr)
library(broom)





glossary_data <- data.frame(
  Abbreviation = c("PTS", "FG", "2P", "3P", "FT", "FGA", "2PA", "3PA", "FGX", "AST", "TRB", "STL", "BLK", "TOV", "G", "MP",
                   "FG%", "2P%", "3P%", "FT%", "PPG", "MPG", "APG", "RPG", "SPG", "FTA", "DRB", "ORB", "PF", "TRIP"),
  Name = c("Points", "Field Goals Made", "2 Point Field Goals", "3 Point Field Goals", "Free Throws Made", "Field Goals Attempted",
           "2 Pointers Attempted", "Three Pointers Attempted", "Field Goals Missed", "Assists", "Total Rebounds", "Steals",
           "Blocks", "Turnovers", "Games Played", "Minutes Played", "Field Goal Percentage", "2 Point Percentage", "Three Point Percentage",
           "Free Throw Percentage", "Points Per Game", "Minutes Per Game", "Assists Per Game", "Rebounds Per Game",
           "Steals Per Game", "Free Throws Attempted", "Defensive Rebounds", "Offensive Rebounds", "Personal Fouls", "Triple Doubles"),
  Definition = c("Points scored by adding all made 1s, 2s, and 3s.",
                 "Total made field goals (excluding free throws).",
                 "2-point field goals made.", "3-point field goals made.", "Free throws made.",
                 "Total field goals attempted.", "2-point shots attempted.", "3-point shots attempted.",
                 "Missed field goals.", "Passes leading to made baskets.",
                 "Total offensive and defensive rebounds.", "Steals (excluding deflections).",
                 "Blocks on field goal attempts.", "Turnovers committed.",
                 "Games played.", "Total minutes played.",
                 "FGM / FGA.", "2PM / 2PA.", "3PM / 3PA.", "FTM / FTA.",
                 "Points per game.", "Minutes per game.", "Assists per game.",
                 "Rebounds per game.", "Steals per game.", "Free throws attempted.",
                 "Defensive rebounds.", "Offensive rebounds.", "Personal fouls.",
                 "Double digits in 3 stats in one game.")
)

draw_half_court <- function(court_color = "#8B0000", court_thickness = 0.7) {
  list(
    # Outer lines (baseline to top of arc)
    geom_rect(aes(xmin = -250, xmax = 250, ymin = -47.5, ymax = 422.5), 
              fill = NA, color = court_color, linewidth = court_thickness),
    
    # Paint (key)
    geom_rect(aes(xmin = -80, xmax = 80, ymin = -47.5, ymax = 142.5), 
              fill = NA, color = court_color, linewidth = court_thickness),
    
    # Free throw circle (top half - solid)
    geom_path(data = arc_points(center = c(0, 142.5), radius = 60, start = 0, end = pi), 
              aes(x, y), color = court_color, linewidth = court_thickness),
    # Free throw circle (bottom half - dotted)
    geom_path(data = arc_points(center = c(0, 142.5), radius = 60, start = pi, end = 2*pi), 
              aes(x, y), color = court_color, linewidth = court_thickness, linetype = "longdash"),
    
    
    # Hoop (centered at 0,0)
    geom_path(data = circle_points(center = c(0, 0), radius = 7.5), 
              aes(x, y), color = "white", linewidth = court_thickness),
    
    # Backboard
    annotate("segment", x = -30, xend = 30, y = -7.5, yend = -7.5, 
             color = "white", linewidth = court_thickness),
    
    # Restricted area arc (closer, ends at width 40)
    geom_path(data = arc_points(center = c(0, 0), radius = 40, start = 0, end = pi), 
              aes(x, y), color = court_color, linewidth = court_thickness),
    
    # 3-point line (straight segments in corners)
    annotate("segment", x = -220, xend = -220, y = -47.5, yend = 89.5, 
             color = court_color, linewidth = court_thickness),
    
    annotate("segment", x = 220, xend = 220, y = -47.5, yend = 89.5, 
             color = court_color, linewidth = court_thickness),
    
    # 3-point arc (connects both lines)
    geom_path(data = arc_points(center = c(0, 0), radius = 237.5, start = acos(220 / 237.5), end = pi - acos(220 / 237.5)), 
              aes(x, y), color = court_color, linewidth = court_thickness)
  )
}

# Utility to create circle or arc points
circle_points <- function(center = c(0, 0), radius = 1, npoints = 100) {
  theta <- seq(0, 2*pi, length.out = npoints)
  data.frame(x = center[1] + radius * cos(theta),
             y = center[2] + radius * sin(theta))
}

arc_points <- function(center = c(0, 0), radius = 1, start = 0, end = pi, npoints = 100) {
  theta <- seq(start, end, length.out = npoints)
  data.frame(x = center[1] + radius * cos(theta),
             y = center[2] + radius * sin(theta))
}


```



# Glossary



```{r}
#| echo: false
#| warning: false

glossary_data |>
  kable()


ggplot() +
      draw_half_court() +
      
      # Free Throw Label
      annotate("text", x = 0, y = 142.5, label = "Free Throw Line",
               size = 4, fontface = "bold", family = "Source Serif Pro", vjust = -1) +
      
      # Three Point Line Label with Arrow
      annotate("text", x = 0, y = 260, label = "Three Point Line",
               size = 4, fontface = "bold", family = "Source Serif Pro", vjust = -1) +
      annotate("segment", x = 0, xend = 0, y = 260, yend = 237.5,
               arrow = arrow(length = unit(0.2, "inches")), color = "#8B0000") +
      
      # Hoop Label
      annotate("text", x = 0, y = -15, label = "Hoop",
               size = 4, fontface = "bold", family = "Source Serif Pro", vjust = 1) +
      
      # Out of Bounds Labels (vertical sides)
      annotate("text", x = -260, y = 200, label = "Out of Bounds", angle = 90,
               size = 4, fontface = "bold", family = "Source Serif Pro", hjust = 0.5) +
      annotate("text", x = 260, y = 200, label = "Out of Bounds", angle = 90,
               size = 4, fontface = "bold", family = "Source Serif Pro", hjust = 0.5) +
      
      coord_fixed() +
      
      # Add title and subtitle
      labs(
        subtitle = "Note: Field Goals (FG) include all made shots except for Free Throws"
      ) +
      
      theme_void(base_family = "Source Serif Pro") +
      theme(
        plot.background = element_rect(fill = "gray90", color = NA)
      )

```


# Sourcing

We pulled our data from multiple sources off of the internet. For the shot chart, the data was pulled from from an API on NBA.com. For Lebron's general stats and the map of his scoring, we used basketballreference.com and realgm.com. realgm.com was also used to collect data for the teammates of LeBron for both the clustering and network visuals.



